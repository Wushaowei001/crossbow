<HR><!------------------------------------------------------------------------>
<H2>Crossbow 0.1</H2>
Radek Micek<BR>
Charles University in Prague, The Czech Republic<BR>

<H3>Architecture</H3>

Crossbow 0.1 is a MACE2-style finite model finder similar to Paradox.
It is an implementation of techniques from [CS03] plus
improved flattening and built-in support for commutativity.

<H3>Strategies</H3>

Same strategy is used for all problems:

<OL>
  <LI>First order formulas are clausified by another prover.</LI>
  <LI>Additional lemmas are generated by another prover,
    small lemmas are added to the clauses of the problem.
  </LI>
  <LI>Clauses of the problem are preprocessed (simplification, flattening,
    splitting, term definitions, commutativity detection).</LI>
  <LI>Clauses are instantiated for increasing domain sizes until some model is
    found. Instantition takes into account commutativity of functions
    and symmetry of predicates.</LI>
</OL>

<H3>Implementation</H3>

Crossbow is implemented in OCaml. Clausification and lemma generation
is done by E. MiniSat is used for incremental SAT solving.

Source code is available from:
<PRE>
    <A HREF="https://github.com/radekm/crossbow">https://github.com/radekm/crossbow</A></PRE>

<H3>Expected Competition Performance</H3>

It should perform slightly better than Paradox.

<H3>References</H3>
<DL>
<DT> CS03
<DD> Claessen K., Sorensson N. (2003),
     <STRONG>New Techniques that Improve MACE-style Finite Model Finding</STRONG>,
     Baumgartner P., Fermueller C,
     <EM>Proceedings of the CADE-19 Workshop: Model Computation - Principles, Algorithms, Applications</EM>
     (Miami, USA)
</DL>
<P>

<HR><!------------------------------------------------------------------------>
